name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Run Tests & Lint
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Configuração do Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"  # Acelera builds futuros

      # 3️⃣ Instalação das dependências
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pytest-cov black flake8 mypy

      # 4️⃣ Verificação de formatação (Black)
      - name: Check code format (Black)
        run: black --check .

      # 5️⃣ Análise de estilo (Flake8)
      - name: Lint with Flake8
        run: flake8 .

      # 6️⃣ Checagem de tipos (Mypy)
      - name: Type check with Mypy
        run: mypy .

      # 7️⃣ Execução de testes
      - name: Run tests with coverage
        run: pytest --cov=. --cov-report=xml --maxfail=1 --disable-warnings -q

      # 8️⃣ Upload do relatório de cobertura (Codecov)
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
          verbose: true
